[
  {
    "ContainingType": "WebApi.Controllers.Auth.AuthenticateController",
    "Method": "Login",
    "RelativePath": "api/Authenticate/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "WebApi.Auth.LoginModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PresentationApi.Auth.DTOs.LoginUserResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Auth.AuthenticateController",
    "Method": "RefreshToken",
    "RelativePath": "api/Authenticate/refresh-token",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tokenModel",
        "Type": "WebApi.Auth.TokenModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "WebApi.Auth.TokenModelDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Auth.AuthenticateController",
    "Method": "Register",
    "RelativePath": "api/Authenticate/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "WebApi.Auth.RegisterModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.Auth.AuthenticateController",
    "Method": "RegisterAdmin",
    "RelativePath": "api/Authenticate/register-admin",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "WebApi.Auth.RegisterModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.Auth.AuthenticateController",
    "Method": "RefreshToken",
    "RelativePath": "api/Authenticate/Register-Merchant",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tokenModel",
        "Type": "WebApi.Auth.TokenModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "WebApi.Auth.TokenModelDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Auth.AuthenticateController",
    "Method": "RegisterSuperAdmin",
    "RelativePath": "api/Authenticate/register-superadmin",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "WebApi.Auth.RegisterModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.Auth.AuthenticateController",
    "Method": "RevokeAll",
    "RelativePath": "api/Authenticate/revoke-all",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.Auth.AuthenticateController",
    "Method": "Revoke",
    "RelativePath": "api/Authenticate/revoke/{username}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PresentationApi.Controllers.Product.ProductController",
    "Method": "AddProduct",
    "RelativePath": "api/Product/AddProduct",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Application.Features.Products.AddProduct.AddProductRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Application.Features.Products.AddProduct.AddProductResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PresentationApi.Controllers.Product.ProductController",
    "Method": "DeleteProduct",
    "RelativePath": "api/Product/DeleteProduct",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Application.Features.Products.DeleteProduct.DeleteProductRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PresentationApi.Controllers.Product.ProductController",
    "Method": "GetAll",
    "RelativePath": "api/Product/GetAll",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Application.Features.Products.GetAllProducts.GetAllProductsRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Application.Features.Products.GetAllProducts.GetAllProductsResponse, Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PresentationApi.Controllers.Product.ProductController",
    "Method": "GetProduct",
    "RelativePath": "api/Product/GetProduct",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Application.Features.Products.GetProductById.GetProductByIdRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Application.Features.Products.GetProductById.GetProductByIdResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PresentationApi.Controllers.Product.ProductController",
    "Method": "GetProductById",
    "RelativePath": "api/Product/GetProductById",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Application.Features.Products.GetProductById.GetProductByIdRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Application.Features.Products.GetProductById.GetProductByIdResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PresentationApi.Controllers.Product.ProductController",
    "Method": "UpdateProduct",
    "RelativePath": "api/Product/UpdateProduct",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Application.Features.Products.AddProduct.UpdateProductRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Application.Features.Products.AddProduct.UpdateProductResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PresentationApi.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[PresentationApi.WeatherForecast, PresentationApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]